apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Release.Name }}-http'
  labels:
    katenary.io/component: http
    katenary.io/project: same-pod
    katenary.io/release: '{{ .Release.Name }}'
  annotations:
    katenary.io/docker-compose-sha1: 74e67695bfdbb829f15531321e158808018280e0
    katenary.io/version: master-bf44d44
spec:
  replicas: 1
  selector:
    matchLabels:
      katenary.io/component: http
      katenary.io/release: '{{ .Release.Name }}'
  template:
    metadata:
      labels:
        katenary.io/component: http
        katenary.io/release: '{{ .Release.Name }}'
    spec:
      containers:
        - name: http
          image: '{{ .Values.http.image }}'
          ports:
            - name: http
              containerPort: 80
          volumeMounts:
            - mountPath: /sock
              name: sock
            - mountPath: /etc/nginx/conf.d
              name: config-nginx
        - name: php
          image: '{{ .Values.php.image }}'
          volumeMounts:
            - mountPath: /sock
              name: sock
            - mountPath: /usr/local/etc/php-fpm.d/www.conf
              name: config-php
              subPath: www.conf
      volumes:
        - emptyDir: {}
          name: sock
        - configMap:
            name: '{{ .Release.Name }}-config-nginx-http'
          name: config-nginx
        - configMap:
            name: '{{ .Release.Name }}-config-php-php'
          name: config-php

